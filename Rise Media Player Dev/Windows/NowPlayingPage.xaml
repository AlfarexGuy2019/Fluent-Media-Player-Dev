<Page
    x:Class="Rise.App.Views.NowPlayingPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:media="using:Microsoft.Toolkit.Uwp.UI.Media"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:uc="using:Rise.App.UserControls"
    xmlns:ui="using:Microsoft.Toolkit.Uwp.UI"
    xmlns:visualizers="using:Rise.App.Visualizers"
    d:Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    d:DesignHeight="300"
    d:DesignWidth="320"
    muxc:BackdropMaterial.ApplyToRootOrPageBackground="True"
    mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Light">
                    <x:Double x:Key="ThumbnailBrushPointerInOpacity">0.5</x:Double>
                </ResourceDictionary>
                <ResourceDictionary x:Key="Dark">
                    <x:Double x:Key="ThumbnailBrushPointerInOpacity">0.25</x:Double>
                </ResourceDictionary>
                <ResourceDictionary x:Key="HighContrast">
                    <x:Double x:Key="ThumbnailBrushPointerInOpacity">0</x:Double>
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>
        </ResourceDictionary>
    </Page.Resources>

    <Grid
        x:Name="RootGrid"
        x:DefaultBindMode="OneWay"
        ColumnSpacing="12">
        <Grid.Background>
            <ImageBrush x:Name="ThumbnailBrush" Stretch="UniformToFill">
                <ImageBrush.ImageSource>
                    <BitmapImage UriSource="{x:Bind MPViewModel.PlayingItem.Thumbnail}" />
                </ImageBrush.ImageSource>
            </ImageBrush>
        </Grid.Background>

        <Border
            x:Name="BlurBrushBorder"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch">
            <Border.Background>
                <media:BackdropBlurBrush x:Name="BlurBrush" />
            </Border.Background>
        </Border>

        <visualizers:BloomView x:Name="BloomVis" Background="#7F000000" />

        <uc:ExtendedTitleBar
            x:Name="TitleBar"
            Title=""
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            FontSize="14"
            ShowIcon="False" />

        <Grid
            Margin="12"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Canvas.ZIndex="2">
            <Button
                x:Name="OverlayExitButton"
                Width="36"
                Height="32"
                Padding="0"
                Click="OnExitOverlayClick"
                Style="{StaticResource TransparentButtonStyle}"
                Visibility="Collapsed">
                <FontIcon FontSize="16" Glyph="&#xEE47;" />
            </Button>

            <Button
                x:Name="BackButton"
                Width="36"
                Height="32"
                Padding="0"
                Click="OnBackButtonClick"
                Style="{StaticResource TransparentButtonStyle}"
                Visibility="Collapsed">
                <FontIcon FontSize="16" Glyph="&#xE112;" />
            </Button>
        </Grid>

        <Grid x:Name="InfoGrid" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="0" />
            </Grid.ColumnDefinitions>

            <StackPanel
                x:Name="InfoText"
                Padding="20"
                VerticalAlignment="Center"
                d:Opacity="1"
                Opacity="0"
                Orientation="Vertical">
                <Border
                    x:Name="ThumbBorder"
                    Width="300"
                    Height="300"
                    Margin="0,0,0,12"
                    HorizontalAlignment="Left"
                    ui:Effects.Shadow="{StaticResource StrongShadow}"
                    BorderBrush="{StaticResource CardStrokeColorDefaultBrush}"
                    BorderThickness="1"
                    CornerRadius="8"
                    Visibility="Collapsed">
                    <Image>
                        <Image.Source>
                            <BitmapImage
                                DecodePixelHeight="300"
                                DecodePixelWidth="300"
                                UriSource="{x:Bind MPViewModel.PlayingItem.Thumbnail}" />
                        </Image.Source>
                    </Image>
                </Border>

                <TextBlock
                    x:Name="TitleText"
                    d:Text="Title"
                    FontSize="24"
                    FontWeight="Bold"
                    HorizontalTextAlignment="Center"
                    MaxLines="2"
                    Style="{StaticResource TitleTextBlockStyle}"
                    Text="{x:Bind MPViewModel.PlayingItem.Title}" />
                <TextBlock
                    x:Name="SubtitleText"
                    Margin="0,4,0,0"
                    d:Text="Subtitle"
                    FontSize="18"
                    FontWeight="SemiBold"
                    HorizontalTextAlignment="Center"
                    MaxLines="1"
                    Opacity="0.6"
                    Style="{StaticResource BodyTextBlockStyle}"
                    Text="{x:Bind MPViewModel.PlayingItem.Subtitle}" />
            </StackPanel>

            <visualizers:LineVisualizer
                x:Name="LineVis"
                Grid.Column="1"
                Width="350"
                Height="350" />
        </Grid>

        <uc:RiseMediaPlayerElement
            x:Name="MainPlayer"
            MaxWidth="1000"
            Margin="15,0,15,15"
            VerticalAlignment="Bottom"
            MediaPlayerVisibility="Collapsed">
            <uc:RiseMediaPlayerElement.TransportControls>
                <uc:RiseMediaTransportControls
                    x:Name="PlayerControls"
                    DisplayItemVisibility="Collapsed"
                    IsCompact="True"
                    IsNextTrackButtonVisible="True"
                    IsPreviousTrackButtonVisible="True"
                    IsRepeatButtonVisible="True"
                    IsRepeatEnabled="True"
                    IsShuffleButtonChecked="{x:Bind MPViewModel.ShuffleEnabled, Mode=TwoWay}"
                    IsShuffleButtonVisible="True"
                    IsShuffleEnabled="True"
                    IsSkipBackwardEnabled="True"
                    IsSkipForwardEnabled="True"
                    ShowAndHideAutomatically="False"
                    ShufflingChanged="OnShufflingChanged" />
            </uc:RiseMediaPlayerElement.TransportControls>
        </uc:RiseMediaPlayerElement>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="PointerStates">
                <VisualState x:Name="PointerInState">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames
                            EnableDependentAnimation="True"
                            Storyboard.TargetName="ThumbnailBrush"
                            Storyboard.TargetProperty="Opacity"
                            Duration="0:0:0.3">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="{ThemeResource ThumbnailBrushPointerInOpacity}">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>

                        <DoubleAnimationUsingKeyFrames
                            EnableDependentAnimation="True"
                            Storyboard.TargetName="InfoText"
                            Storyboard.TargetProperty="Opacity"
                            Duration="0:0:0.3">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>

                        <DoubleAnimationUsingKeyFrames
                            EnableDependentAnimation="True"
                            Storyboard.TargetName="BlurBrush"
                            Storyboard.TargetProperty="Amount"
                            Duration="0:0:0.3">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="10">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <VisualState x:Name="PointerOutState">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames
                            EnableDependentAnimation="True"
                            Storyboard.TargetName="ThumbnailBrush"
                            Storyboard.TargetProperty="Opacity"
                            Duration="0:0:0.3">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>

                        <DoubleAnimationUsingKeyFrames
                            EnableDependentAnimation="True"
                            Storyboard.TargetName="InfoText"
                            Storyboard.TargetProperty="Opacity"
                            Duration="0:0:0.3">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>

                        <DoubleAnimationUsingKeyFrames
                            EnableDependentAnimation="True"
                            Storyboard.TargetName="BlurBrush"
                            Storyboard.TargetProperty="Amount"
                            Duration="0:0:0.3">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="VisualizerStates">
                <VisualState x:Name="NoVisualizerState">
                    <VisualState.Setters>
                        <Setter Target="LineVis.Opacity" Value="0" />
                        <Setter Target="BloomVis.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="LineVisualizerState">
                    <VisualState.Setters>
                        <Setter Target="LineVis.Opacity" Value="1" />
                        <Setter Target="BloomVis.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="BloomVisualizerState">
                    <VisualState.Setters>
                        <Setter Target="LineVis.Opacity" Value="0" />
                        <Setter Target="BloomVis.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="SelectedModeStates">
                <VisualState x:Name="SeparateWindowState" />
                <VisualState x:Name="MainWindowState">
                    <VisualState.Setters>
                        <Setter Target="OverlayExitButton.Visibility" Value="Collapsed" />
                        <Setter Target="BackButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="CompactOverlayState">
                    <VisualState.Setters>
                        <Setter Target="OverlayExitButton.Visibility" Value="Visible" />
                        <Setter Target="BackButton.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="SizeStates">
                <VisualState x:Name="LargeState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="600" MinWindowWidth="720" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="TitleText.HorizontalTextAlignment" Value="Left" />
                        <Setter Target="SubtitleText.HorizontalTextAlignment" Value="Left" />
                        <Setter Target="InfoText.VerticalAlignment" Value="Bottom" />
                        <Setter Target="InfoText.Margin" Value="0,0,0,60" />
                        <Setter Target="ThumbBorder.Visibility" Value="Visible" />
                        <Setter Target="InfoGrid.ColumnDefinitions[1].Width" Value="1*" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
